<common:PageBase
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:grid="using:Telerik.UI.Xaml.Controls.Grid"
    xmlns:i="using:Microsoft.Xaml.Interactivity" 
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:common="using:TouchPointWindows.Common"
    xmlns:converters="using:WinRTXamlToolkit.Converters"
    xmlns:controls="using:WinRTXamlToolkit.Controls"
    xmlns:views="using:TouchPointWindows.Views"
    x:Name="pageRoot"
    x:Class="TouchPointWindows.Views.OrderView"
    DataContext="{Binding OrderViewModel, Source={StaticResource Locator}}"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Style/Style.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <x:String x:Key="ChevronGlyph">&#xE26B;</x:String>
            <!--
                Collection of grouped items displayed by this page, bound to a subset
                of the complete item list because items in groups cannot be virtualized
            -->
            <CollectionViewSource
                x:Name="groupedItemsViewSource"
                Source="{Binding GroupedItems}"
                IsSourceGrouped="true"
                ItemsPath="Items"/>

            <CollectionViewSource
                x:Name="groupViewSource"
                Source="{Binding Groups}"/>

            <CollectionViewSource
                x:Name="orderedItemsViewSource"
                Source="{Binding Order}"/>

            <CollectionViewSource
                x:Name="OrdersSource"
                Source="{Binding Orders}"/>

            <ItemsPanelTemplate x:Key="groupItemTemplatePanel">
                <ItemsWrapGrid Orientation="Horizontal"/>
            </ItemsPanelTemplate>

        </ResourceDictionary>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Margin="39,59,39,0" Command="{Binding NavigationHelper.GoBackCommand, ElementName=pageRoot}"
				Style="{StaticResource NavigationBackButtonNormalStyle}"
				VerticalAlignment="Top"
				AutomationProperties.Name="Back"
				AutomationProperties.AutomationId="BackButton"
				AutomationProperties.ItemType="Navigation Button"/>
            <TextBlock x:Name="pageTitle" Text="{StaticResource AppName}" Style="{StaticResource HeaderTextBlockStyle}" Grid.Column="1" 
				IsHitTestVisible="false" TextWrapping="NoWrap" VerticalAlignment="Bottom" Margin="0,0,30,40"/>
        </Grid>

        <!-- Horizontal scrolling grid -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="480"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="80"/>
                <RowDefinition/>
                <RowDefinition Height="200"/>
            </Grid.RowDefinitions>

            <ListView Grid.Row="0" Grid.Column="1"
				SelectionMode="Single"
				ItemsSource="{Binding Source={StaticResource groupViewSource}}"
				ItemsPanel="{StaticResource groupItemTemplatePanel}"
                SelectedItem="{Binding MenuGroupSelectedItem, Mode=TwoWay}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border>
                            <Grid Margin="3,3,9,3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Name}" Style="{StaticResource SubheaderTextBlockStyle}" />
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <GridView
                x:Name="ItemGridView"
			    AutomationProperties.AutomationId="ItemGridView"
				AutomationProperties.Name="Grouped Items"
				Grid.Column="1"
				Grid.Row="1"
				Padding="20,20,40,46"
				ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
				SelectionMode="Single"
				IsSwipeEnabled="False"
				IsItemClickEnabled="True"
			    Grid.RowSpan="2">
                <i:Interaction.Behaviors>
                    <i:BehaviorCollection>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <core:InvokeCommandAction Command="{Binding MenuItemClickCommand}"    />
                            <!--<core:CallMethodAction MethodName="Method1"  TargetObject="{Binding Mode=OneWay}" />-->
                        </core:EventTriggerBehavior>
                    </i:BehaviorCollection>
                </i:Interaction.Behaviors>

                <GridView.ItemTemplate>
                    <DataTemplate>
                        <Grid Style="{StaticResource TouchPointItemStyle}" HorizontalAlignment="Left">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" Background="{ThemeResource ListViewItemOverlayBackgroundThemeBrush}">
                                <TextBlock Text="{Binding Name}" Foreground="{ThemeResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextBlockStyle}" Margin="5,0,5,0"/>
                                <TextBlock Text="{Binding Price}" Foreground="{ThemeResource ListViewItemOverlaySecondaryForegroundThemeBrush}" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="NoWrap" Margin="5,0,5,1"/>
                            </StackPanel>
                            <Border Visibility="{Binding IsOrdered}" Background="{ThemeResource ListViewItemOverlayBackgroundThemeBrush}" VerticalAlignment="Center" HorizontalAlignment="Left" Width="20" Height="18" Margin="0,0,0,50">
                                <Button x:Name="RemoveItemButton"  Content="{Binding Quantity}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                    <i:Interaction.Behaviors>
                                        <i:BehaviorCollection>
                                            <core:EventTriggerBehavior EventName="Tapped">
                                                <core:InvokeCommandAction Command="{Binding DataContext.RemoveItemCommand, ElementName=ItemGridView}" CommandParameter="{Binding Id}"    />
                                            </core:EventTriggerBehavior>
                                        </i:BehaviorCollection>
                                    </i:Interaction.Behaviors>
                                </Button>
                            </Border>
                        </Grid>
                    </DataTemplate>
                </GridView.ItemTemplate>
                <GridView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsWrapGrid GroupPadding="0,0,70,0"/>
                    </ItemsPanelTemplate>
                </GridView.ItemsPanel>
                <GridView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <Grid Margin="0,0,0,2">
                                    <Button Foreground="{ThemeResource ApplicationHeaderForegroundThemeBrush}"
										AutomationProperties.Name="Group Title"
										Style="{StaticResource TextBlockButtonStyle}" >
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Name}" Margin="0,-11,10,10" Style="{StaticResource SubheaderTextBlockStyle}" TextWrapping="NoWrap" />
                                            <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-11,0,10" Style="{StaticResource SubheaderTextBlockStyle}" TextWrapping="NoWrap" />
                                        </StackPanel>
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </GridView.GroupStyle>
            </GridView>

            <grid:RadDataGrid Grid.Row="1" ItemsSource="{Binding OrderMenu}" Margin="10,0" IsSynchronizedWithCurrentItem="True"
				UserEditMode="Inline" UserGroupMode="Disabled" AutoGenerateColumns="False">
                <grid:RadDataGrid.GroupDescriptors>
                    <grid:PropertyGroupDescriptor PropertyName="Group"/>
                </grid:RadDataGrid.GroupDescriptors>
                <grid:RadDataGrid.Columns>
                    <grid:DataGridTemplateColumn Width="50" SizeMode="Fixed" Header="Serial No.">
                        <grid:DataGridTemplateColumn.CellContentTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Index}"/>
                            </DataTemplate>
                        </grid:DataGridTemplateColumn.CellContentTemplate>
                    </grid:DataGridTemplateColumn>
                    <grid:DataGridTextColumn PropertyName="Item" Header="Name"/>
                    <grid:DataGridNumericalColumn PropertyName="Price" Header="Price" CellContentFormat="{}{0,0:C2}"/>
                    <grid:DataGridNumericalColumn PropertyName="Quantity" Header="Quantity"/>
                    <grid:DataGridNumericalColumn PropertyName="Cost" Header="Cost" CellContentFormat="{}{0,0:C2}"/>
                </grid:RadDataGrid.Columns>
            </grid:RadDataGrid>
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="2" Margin="10,0,10,10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" Text="Net" VerticalAlignment="Center" FontSize="22"/>
                    <TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" Text="{Binding NetValue}" VerticalAlignment="Center" Grid.Column="2" FontSize="22"/>
                    <TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" Text="VAT" VerticalAlignment="Center" Grid.Row="1" FontSize="22"/>
                    <TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" Text="{Binding VatValue}" VerticalAlignment="Center" Grid.Row="1" Grid.Column="2" FontSize="22"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Row="2">
                        <Button Content="Discount" Command="{Binding DiscountPopupCommand}"   FontSize="18.667" Height="46" Width="235"/>
                        <StackPanel Orientation="Horizontal" Visibility="{Binding IsDiscountPercent, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="{Binding DiscountPercent}" Margin="10,0,0,0" FontSize="22"/>
                            <TextBlock Text="%" FontSize="22"/>
                        </StackPanel>
                    </StackPanel>
                    <TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" VerticalAlignment="Center" Grid.Column="2" Grid.Row="2" Text="{Binding DiscountValueApplied}" FontSize="22"/>
                    <TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" Text="Total" VerticalAlignment="Center" Grid.Row="3" FontSize="27"/>
                    <TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" Text="{Binding TotalValue}" VerticalAlignment="Center" Grid.Row="3" Grid.Column="2" FontSize="27"/>
                </Grid>
            </Border>
        </Grid>

        <Rectangle Grid.Row="0" Grid.RowSpan="2" x:Name="rectBackgroundHide" Fill="#FF1D1D1D" HorizontalAlignment="Left" Stroke="Black" VerticalAlignment="Top"  Visibility="{Binding IsDiscountPopup, Converter={StaticResource BooleanToVisibilityConverter}}" Opacity="0.7"/>
        <views:DiscountPopupView x:Name="discountPopup" Grid.Row="0" Grid.RowSpan="2" Visibility="{Binding IsDiscountPopup, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Grid>
</common:PageBase>
